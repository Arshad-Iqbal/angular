import { Component } from '@angular/core';

function log(target,name,descriptor){
  console.log(target,name,descriptor)
  
  // Store the original function in a variable 
  const originalFunction = descriptor.value
  //originalFunction()
  // do some manipulations with the descriptor.value (the actual function)
  /*descriptor.value=function(){
    console.log("This function was hacked..")
  }*/
  descriptor.value=function(...args){
    console.log("Arguments ",args," were passed to this function")
    const result =originalFunction.apply(this,args)
    console.log("The result of this function is :: ",result+5)
    return result
  }
  // return the descriptor
   return descriptor
}
@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.css']
})
export class AppComponent {
  title = 'intro2angular';

  constructor(){
    console.log("This statement was generated by the constructor",this.aSimpleMethod(5,6))
  }
  @log
  aSimpleMethod(a,b){
    //console.log("Hey there!")
    return a*b
  }
}
